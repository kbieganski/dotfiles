#!/bin/env zsh

dotfiles_dir=$(dirname ${(%):-%N})
pkg_dir=pkg
pacman_pkg_list=$pkg_dir/pacman.txt
secret_dir=ext/dotfiles-secret

function silent {
    local temp=$(mktemp)
    echo "\e[32mRunning '\e[0m$*\e[34m'\e[0m"
    $* &> $temp
    if [ $? -ne 0 ]; then
        < $temp
        echo "\e[31mFailed: '\e[0m$*\e[31m'\e[0m"
        exit 1
    fi
}

cd $dotfiles_dir

# Fetch changes
old_commit=$(git rev-parse HEAD)
silent git pull
silent git submodule update --init --recursive
silent stow $dotfiles_dir
new_commit=$(git rev-parse HEAD)

# Delete system packages
pacman_del_pkgs=$(comm -23 <(git show $old_commit:$pacman_pkg_list | sort) <(sort < $pacman_pkg_list))
if [ -n "$pacman_del_pkgs" ]; then
    silent sudo pacman -Rs --noconfirm ${=pacman_del_pkgs}
fi

# Install system packages
pacman_new_pkgs=$(comm -13 <(pacman -Qqne | sort) <(sort < $pacman_pkg_list))
if [ -n "$pacman_new_pkgs" ]; then
    silent sudo pacman -Sy --noconfirm ${=pacman_new_pkgs}
fi

pacman -Qqne | rg -v "(amd|intel|nvidia|cuda|wacom)" | sort > $pacman_pkg_list

# Sync Neovim plugins
silent nvim '+Lazy! sync' +qa

# Update bat cache
silent bat cache --build

# Install Rust packages
for toolchain in stable nightly; do
    silent rustup toolchain install --profile default $toolchain
    while read pkg; do
        silent rustup +$toolchain component add $pkg
    done < $pkg_dir/rustup-$toolchain.txt
    while read pkg; do
        silent cargo +$toolchain install $pkg
    done < $pkg_dir/cargo.txt
    while read pkg; do
        silent cargo +$toolchain install --git $pkg
    done < $pkg_dir/cargo-git.txt
done

# Commit changes and push
if [ -n "$(git -C $secret_dir diff --staged --name-only)" ]; then
    silent git -C $secret_dir save
    silent git -C $secret_dir push
    silent git add $secret_dir
fi

if [ -n "$(git diff --staged --name-only)" ]; then
    silent git save
    silent git push
fi
