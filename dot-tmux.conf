# General 
set-option -g detach-on-destroy off
set-option -g status off
set -g mouse on
set -g allow-passthrough on
set -g default-terminal "${TERM}"
set -g focus-events on
set -g xterm-keys on
set -s focus-events on
set -g history-limit 10000
set -g update-environment "SSH_AUTH_SOCK \
                           SSH_CONNECTION \
                           DISPLAY"

# Reload configuration
bind r source-file ~/.tmux.conf \; display '~/.tmux.conf sourced'

# Display 
set -g aggressive-resize on
set -g window-size latest
set -g automatic-rename on   # rename window to reflect current program
set -g renumber-windows on    # renumber windows when a window is closed
set -g set-titles on          # set terminal title
set -g display-panes-time 800 # slightly longer pane indicators display time
set -g display-time 1000      # slightly longer status messages display time
set -g monitor-activity on
set -g visual-activity off

source-file ~/.tmux/theme

# Navigation 
is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
    | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|l?n?vim?x?|fzf)(diff)?$'"

bind -n M-s choose-session
bind -n M-S new-session
bind -n M-, if-shell "$is_vim" "send-keys M-," "previous-window"
bind -n M-. if-shell "$is_vim" "send-keys M-." "next-window"
bind -n M-< previous-window
bind -n M-> next-window
bind -n M-w choose-tree
bind -n M-W new-window

bind b split-window -v -c "#{?pane_path,#{pane_path},#{pane_current_path}}"
bind -n M-b if-shell "$is_vim" "send-keys M-b" "split-window -v -c '#{?pane_path,#{pane_path},#{pane_current_path}}'"
bind -n M-B split-window -v -c "#{?pane_path,#{pane_path},#{pane_current_path}}"

bind v split-window -h -c "#{?pane_path,#{pane_path},#{pane_current_path}}"
bind -n M-v if-shell "$is_vim" "send-keys M-v" "split-window -h -c '#{?pane_path,#{pane_path},#{pane_current_path}}'"
bind -n M-V split-window -h -c "#{?pane_path,#{pane_path},#{pane_current_path}}"

bind -n M-q if-shell "$is_vim" "send-keys M-q" "kill-pane"

bind -r h select-pane -L
bind -r j select-pane -D
bind -r k select-pane -U
bind -r l select-pane -R

bind -n M-h if-shell "$is_vim" "send-keys M-h" "if -F '#{pane_at_left}'  '' 'select-pane -L'"
bind -n M-j if-shell "$is_vim" "send-keys M-j" "if -F '#{pane_at_bottom}'  '' 'select-pane -D'"
bind -n M-k if-shell "$is_vim" "send-keys M-k" "if -F '#{pane_at_top}'  '' 'select-pane -U'"
bind -n M-l if-shell "$is_vim" "send-keys M-l" "if -F '#{pane_at_right}'  '' 'select-pane -R'"

bind -n M-H if-shell "$is_vim" "send-keys M-H" "if -F '#{pane_at_left}'  '' 'swap-pane -L'"
bind -n M-J if-shell "$is_vim" "send-keys M-J" "if -F '#{pane_at_bottom}'  '' 'swap-pane -D'"
bind -n M-K if-shell "$is_vim" "send-keys M-K" "if -F '#{pane_at_top}'  '' 'swap-pane -U'"
bind -n M-L if-shell "$is_vim" "send-keys M-L" "if -F '#{pane_at_right}'  '' 'swap-pane -R'"

# Copy mode
bind Enter copy-mode
bind -T copy-mode-vi MouseDragEnd1Pane send-keys -X copy-selection
run -b 'tmux bind -t vi-copy v begin-selection 2> /dev/null || true'
run -b 'tmux bind -T copy-mode-vi v send -X begin-selection 2> /dev/null || true'
run -b 'tmux bind -t vi-copy C-v rectangle-toggle 2> /dev/null || true'
run -b 'tmux bind -T copy-mode-vi C-v send -X rectangle-toggle 2> /dev/null || true'
run -b 'tmux bind -t vi-copy y copy-selection 2> /dev/null || true'
run -b 'tmux bind -T copy-mode-vi y send -X copy-selection-and-cancel 2> /dev/null || true'
run -b 'tmux bind -t vi-copy Escape cancel 2> /dev/null || true'
run -b 'tmux bind -T copy-mode-vi Escape send -X cancel 2> /dev/null || true'
run -b 'tmux bind -t vi-copy H start-of-line 2> /dev/null || true'
run -b 'tmux bind -T copy-mode-vi H send -X start-of-line 2> /dev/null || true'
run -b 'tmux bind -t vi-copy L end-of-line 2> /dev/null || true'
run -b 'tmux bind -T copy-mode-vi L send -X end-of-line 2> /dev/null || true'
if -b 'command -v xsel > /dev/null 2>&1' 'bind y run -b "tmux save-buffer - | xsel -i -b"'
if -b '! command -v xsel > /dev/null 2>&1 && command -v xclip > /dev/null 2>&1' 'bind y run -b "tmux save-buffer - | xclip -i -selection clipboard >/dev/null 2>&1"'

# Undercurl 
set -as terminal-overrides ',*:Smulx=\E[4::%p1%dm'
set -as terminal-overrides ',*:Setulc=\E[58::2::%p1%{65536}%/%d::%p1%{256}%/%{255}%&%d::%p1%{255}%&%d%;m'
