# -- general -------------------------------------------------------------------

set-option -g detach-on-destroy off
set-option -g status off
set -g mouse on
set -g allow-passthrough on

set -g default-terminal "screen-256color"
if 'infocmp -x tmux-256color > /dev/null 2>&1' 'set -g default-terminal "tmux-256color"'

bind -T copy-mode-vi MouseDragEnd1Pane send-keys -X copy-selection

set-option -sa terminal-overrides ',*:RGB'

set -g focus-events on

setw -g xterm-keys on
set -s escape-time 10
set -sg repeat-time 600
set -s focus-events on
set -g window-size latest
setw -g aggressive-resize on

# GNU-Screen compatible prefix
set -g prefix2 C-a
bind C-a send-prefix -2

set -g history-limit 10000

# reload configuration
bind r source-file ~/.tmux.conf \; display '~/.tmux.conf sourced'


# -- display -------------------------------------------------------------------

set -g base-index 1           # start windows numbering at 1
setw -g pane-base-index 1     # make pane numbering consistent with windows

setw -g automatic-rename on   # rename window to reflect current program
set -g renumber-windows on    # renumber windows when a window is closed

set -g set-titles on          # set terminal title

set -g display-panes-time 800 # slightly longer pane indicators display time
set -g display-time 1000      # slightly longer status messages display time

set -g monitor-activity on
set -g visual-activity off

source-file ~/.tmux/theme

# -- navigation ----------------------------------------------------------------

is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
    | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"

bind -n M-s choose-session
bind -n M-S new-session
bind -n M-K previous-window
bind -n M-J next-window
bind -n M-w choose-tree
bind -n M-W new-window

bind b split-window -v -c "#{?pane_path,#{pane_path},#{pane_current_path}}"
bind -n M-b if-shell "$is_vim" "send-keys M-c" "split-window -v -c '#{?pane_path,#{pane_path},#{pane_current_path}}'"
bind -n M-B split-window -v -c "#{?pane_path,#{pane_path},#{pane_current_path}}"

bind v split-window -h -c "#{?pane_path,#{pane_path},#{pane_current_path}}"
bind -n M-v if-shell "$is_vim" "send-keys M-v" "split-window -h -c '#{?pane_path,#{pane_path},#{pane_current_path}}'"
bind -n M-V split-window -h -c "#{?pane_path,#{pane_path},#{pane_current_path}}"

bind -n M-q if-shell "$is_vim" "send-keys M-q" "kill-pane"

bind -r h select-pane -L
bind -r j select-pane -D
bind -r k select-pane -U
bind -r l select-pane -R

bind -n M-h if-shell "$is_vim" "send-keys M-h" "if -F '#{pane_at_left}'  '' 'select-pane -L'"
bind -n M-j if-shell "$is_vim" "send-keys M-j" "if -F '#{pane_at_bottom}'  '' 'select-pane -D'"
bind -n M-k if-shell "$is_vim" "send-keys M-k" "if -F '#{pane_at_top}'  '' 'select-pane -U'"
bind -n M-l if-shell "$is_vim" "send-keys M-l" "if -F '#{pane_at_right}'  '' 'select-pane -R'"

bind -n M-H if-shell "$is_vim" "send-keys M-H" "if -F '#{pane_at_left}'  '' 'swap-pane -L'"
bind -n M-J if-shell "$is_vim" "send-keys M-J" "if -F '#{pane_at_bottom}'  '' 'swap-pane -D'"
bind -n M-K if-shell "$is_vim" "send-keys M-K" "if -F '#{pane_at_top}'  '' 'swap-pane -U'"
bind -n M-L if-shell "$is_vim" "send-keys M-L" "if -F '#{pane_at_right}'  '' 'swap-pane -R'"


# -- copy mode -----------------------------------------------------------------

bind Enter copy-mode # enter copy mode

run -b 'tmux bind -t vi-copy v begin-selection 2> /dev/null || true'
run -b 'tmux bind -T copy-mode-vi v send -X begin-selection 2> /dev/null || true'
run -b 'tmux bind -t vi-copy C-v rectangle-toggle 2> /dev/null || true'
run -b 'tmux bind -T copy-mode-vi C-v send -X rectangle-toggle 2> /dev/null || true'
run -b 'tmux bind -t vi-copy y copy-selection 2> /dev/null || true'
run -b 'tmux bind -T copy-mode-vi y send -X copy-selection-and-cancel 2> /dev/null || true'
run -b 'tmux bind -t vi-copy Escape cancel 2> /dev/null || true'
run -b 'tmux bind -T copy-mode-vi Escape send -X cancel 2> /dev/null || true'
run -b 'tmux bind -t vi-copy H start-of-line 2> /dev/null || true'
run -b 'tmux bind -T copy-mode-vi H send -X start-of-line 2> /dev/null || true'
run -b 'tmux bind -t vi-copy L end-of-line 2> /dev/null || true'
run -b 'tmux bind -T copy-mode-vi L send -X end-of-line 2> /dev/null || true'

# copy to X11 clipboard
if -b 'command -v xsel > /dev/null 2>&1' 'bind y run -b "tmux save-buffer - | xsel -i -b"'
if -b '! command -v xsel > /dev/null 2>&1 && command -v xclip > /dev/null 2>&1' 'bind y run -b "tmux save-buffer - | xclip -i -selection clipboard >/dev/null 2>&1"'
# copy to macOS clipboard
if -b 'command -v pbcopy > /dev/null 2>&1' 'bind y run -b "tmux save-buffer - | pbcopy"'
if -b 'command -v reattach-to-user-namespace > /dev/null 2>&1' 'bind y run -b "tmux save-buffer - | reattach-to-user-namespace pbcopy"'
# copy to Windows clipboard
if -b 'command -v clip.exe > /dev/null 2>&1' 'bind y run -b "tmux save-buffer - | clip.exe"'
if -b '[ -c /dev/clipboard ]' 'bind y run -b "tmux save-buffer - > /dev/clipboard"'


# -- undercurl -----------------------------------------------------------------

set -g default-terminal "${TERM}"
set -as terminal-overrides ',*:Smulx=\E[4::%p1%dm'  # undercurl support
set -as terminal-overrides ',*:Setulc=\E[58::2::%p1%{65536}%/%d::%p1%{256}%/%{255}%&%d::%p1%{255}%&%d%;m'


# -- plugins -------------------------------------------------------------------

set -g @plugin 'tmux-plugins/tpm'
set -g @plugin 'tmux-plugins/tmux-resurrect'

run '~/.tmux/plugins/tpm/tpm'
